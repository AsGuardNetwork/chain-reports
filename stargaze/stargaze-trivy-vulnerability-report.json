{
  "SchemaVersion": 2,
  "ArtifactName": "stargaze_v11.0.0",
  "ArtifactType": "container_image",
  "Metadata": {
    "ImageID": "sha256:df5dbb11cdd022f1eeea94b095670e83334d8f7eeac81b8277c6ceac44f080e7",
    "DiffIDs": [
      "sha256:4bfc77f3ba42f23047affe152c9d91f770dc49a488b5bb8209dcc3b017cc8e87"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2023-07-06T19:25:01.5678778Z",
      "history": [
        {
          "created": "2023-07-06T19:25:01.5678778Z",
          "created_by": "COPY /bin/starsd /bin/starsd # buildkit",
          "comment": "buildkit.dockerfile.v0"
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:4bfc77f3ba42f23047affe152c9d91f770dc49a488b5bb8209dcc3b017cc8e87"
        ]
      },
      "config": {
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ],
        "WorkingDir": "/"
      }
    }
  },
  "Results": [
    {
      "Target": "bin/starsd",
      "Class": "lang-pkgs",
      "Type": "gobinary",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "GHSA-w44m-8mv2-v78h",
          "PkgName": "github.com/cosmos/cosmos-sdk",
          "InstalledVersion": "v0.45.16",
          "FixedVersion": "0.46.13, 0.47.3",
          "Layer": {
            "Digest": "sha256:a35ab965ab800822b763045479d9a172f26e94ae8e3a47904f3573eb6ce563b6",
            "DiffID": "sha256:4bfc77f3ba42f23047affe152c9d91f770dc49a488b5bb8209dcc3b017cc8e87"
          },
          "PrimaryURL": "https://github.com/advisories/GHSA-w44m-8mv2-v78h",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "Cosmos \"Barberry\" vulnerability in github.com/cosmos/cosmos-sdk",
          "Description": "The cosmos-sdk module is affected by the vulnerability codenamed \"Barberry\".",
          "Severity": "MEDIUM",
          "References": [
            "https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825",
            "https://github.com/advisories/GHSA-w44m-8mv2-v78h",
            "https://github.com/cosmos/cosmos-sdk/pull/16466"
          ]
        },
        {
          "VulnerabilityID": "GHSA-qfc5-6r3j-jj22",
          "PkgName": "github.com/cosmos/cosmos-sdk",
          "InstalledVersion": "v0.45.16",
          "Layer": {
            "Digest": "sha256:a35ab965ab800822b763045479d9a172f26e94ae8e3a47904f3573eb6ce563b6",
            "DiffID": "sha256:4bfc77f3ba42f23047affe152c9d91f770dc49a488b5bb8209dcc3b017cc8e87"
          },
          "PrimaryURL": "https://github.com/advisories/GHSA-qfc5-6r3j-jj22",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "Go package github.com/cosmos/cosmos-sdk module x/crisis does NOT cause chain halt",
          "Description": "If an invariant check fails on a Cosmos SDK network, and a transaction is sent to the x/crisis package to halt the chain, the chain does not halt as originally intended.\n\nNo patch will be released, as the package is planned to be deprecated and replaced.",
          "Severity": "LOW",
          "References": [
            "https://github.com/advisories/GHSA-qfc5-6r3j-jj22",
            "https://github.com/cosmos/cosmos-sdk/issues/15325",
            "https://github.com/cosmos/cosmos-sdk/issues/15706",
            "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-qfc5-6r3j-jj22"
          ]
        },
        {
          "VulnerabilityID": "GHSA-w5w5-2882-47pc",
          "PkgName": "github.com/cosmos/cosmos-sdk",
          "InstalledVersion": "v0.45.16",
          "Layer": {
            "Digest": "sha256:a35ab965ab800822b763045479d9a172f26e94ae8e3a47904f3573eb6ce563b6",
            "DiffID": "sha256:4bfc77f3ba42f23047affe152c9d91f770dc49a488b5bb8209dcc3b017cc8e87"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-w5w5-2882-47pc",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "github.com/cosmos/cosmos-sdk's x/crisis does not charge ConstantFee",
          "Description": "# x/crisis does not charge ConstantFee\n### Impact\nIf a transaction is sent to the `x/crisis` module to check an invariant, the ConstantFee parameter of the chain is NOT charged. All versions of the `x/crisis` module are affected on all versions of the Cosmos SDK.\n\n### Details\nThe `x/crisis` module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a `MsgVerifyInvariant` with the name of the invariant. Processing this message takes extra processing power hence a `ConstantFee` was introduced on the chain that is charged as extra from the reporter for the extra computational work. This is supposed to avert spammers on the chain making nodes do extra computations using this transaction. By not charging the `ConstantFee`, the transactions related to invariant checking are relatively cheaper compared to the computational need and other transactions.\n\nThat said, the submitter still has to pay the transaction fee to put the transaction on the network, hence using this weakness for spamming is limited by the usual mechanisms.\n\nSynthetic testing showed up to a 20% increase in CPU usage on a validator node that is spammed by hundreds of `MsgVerifyInvariant` messages which still makes this an expensive operation to carry out on a live blockchain network.\n\n### Patches\nThe `ConstantFee` charge of the `x/crisis` module will either be fixed or disabled in an upcoming regular release of the Cosmos SDK.\n\nThe `x/crisis` module was originally intended to allow chains to halt rather than continue with some unknown behavior in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential [cost of halting increases](https://github.com/osmosis-labs/osmosis/issues/570), chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks.\n\nThe SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.\n\nHence, the decision was made that the `x/crisis` module will be deprecated when new modules take over its responsibilities.\n\n### Workarounds\nThere is no workaround posted. Validators are advised to leave some extra computing room on their servers for possible spamming scenarios. (This is a good measure in any case.)\n\n### References\nSDK developer epic about invariant checking: https://github.com/cosmos/cosmos-sdk/issues/15706\n",
          "Severity": "LOW",
          "References": [
            "https://github.com/advisories/GHSA-w5w5-2882-47pc",
            "https://github.com/cosmos/cosmos-sdk/issues/15706",
            "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-w5w5-2882-47pc"
          ]
        },
        {
          "VulnerabilityID": "CVE-2023-32731",
          "PkgName": "google.golang.org/grpc",
          "InstalledVersion": "v1.33.2",
          "FixedVersion": "1.53.0",
          "Layer": {
            "Digest": "sha256:a35ab965ab800822b763045479d9a172f26e94ae8e3a47904f3573eb6ce563b6",
            "DiffID": "sha256:4bfc77f3ba42f23047affe152c9d91f770dc49a488b5bb8209dcc3b017cc8e87"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-32731",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "sensitive information disclosure",
          "Description": "When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this could lead to requests from the proxy being interpreted as containing headers from different proxy clients - leading to an information leak that can be used for privilege escalation or data exfiltration. We recommend upgrading beyond the commit contained inÂ  https://github.com/grpc/grpc/pull/33005 https://github.com/grpc/grpc/pull/33005 \n",
          "Severity": "HIGH",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "V3Score": 7.4
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "V3Score": 7.4
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2023-32731",
            "https://github.com/advisories/GHSA-cfgp-2977-2fmm",
            "https://github.com/grpc/grpc/pull/32309",
            "https://github.com/grpc/grpc/pull/33005",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-32731",
            "https://www.cve.org/CVERecord?id=CVE-2023-32731"
          ],
          "PublishedDate": "2023-06-09T11:15:00Z",
          "LastModifiedDate": "2023-06-15T22:18:00Z"
        }
      ]
    }
  ]
}
