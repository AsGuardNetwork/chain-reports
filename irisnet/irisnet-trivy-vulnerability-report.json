{
  "SchemaVersion": 2,
  "ArtifactName": "irisnet_v2.0.3",
  "ArtifactType": "container_image",
  "Metadata": {
    "ImageID": "sha256:9bd1c016dd6217a1df91b7d0b191c475e439900384da68fcf373673fb1e85ce3",
    "DiffIDs": [
      "sha256:100a6dd7343738d0eeaff66ba5b15d27abcfba4321ef19c9e2ec5aa0e8749543"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2023-06-10T11:46:12.375119346Z",
      "history": [
        {
          "created": "2023-06-10T11:46:12.375119346Z",
          "created_by": "COPY /bin/iris /bin/iris # buildkit",
          "comment": "buildkit.dockerfile.v0"
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:100a6dd7343738d0eeaff66ba5b15d27abcfba4321ef19c9e2ec5aa0e8749543"
        ]
      },
      "config": {
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ],
        "WorkingDir": "/"
      }
    }
  },
  "Results": [
    {
      "Target": "bin/iris",
      "Class": "lang-pkgs",
      "Type": "gobinary",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2020-8911",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.40.45",
          "Layer": {
            "Digest": "sha256:57d9117a2ee2cc3760c837b08d0986fd23fc86d03fd59866ceaebe1740b1d700",
            "DiffID": "sha256:100a6dd7343738d0eeaff66ba5b15d27abcfba4321ef19c9e2ec5aa0e8749543"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8911",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws/aws-sdk-go: CBC padding oracle issue in AWS S3 Crypto SDK for golang",
          "Description": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 5.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8911",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869800",
            "https://github.com/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8911",
            "https://pkg.go.dev/vuln/GO-2022-0646",
            "https://www.cve.org/CVERecord?id=CVE-2020-8911"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-18T13:37:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-8912",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.40.45",
          "Layer": {
            "Digest": "sha256:57d9117a2ee2cc3760c837b08d0986fd23fc86d03fd59866ceaebe1740b1d700",
            "DiffID": "sha256:100a6dd7343738d0eeaff66ba5b15d27abcfba4321ef19c9e2ec5aa0e8749543"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8912",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws-sdk-go: In-band key negotiation issue in AWS S3 Crypto SDK for golang",
          "Description": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 2.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8912",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869801",
            "https://github.com/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8912",
            "https://pkg.go.dev/vuln/GO-2022-0646",
            "https://www.cve.org/CVERecord?id=CVE-2020-8912"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-17T19:31:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-44797",
          "PkgName": "github.com/btcsuite/btcd",
          "InstalledVersion": "v0.22.1",
          "FixedVersion": "0.23.2",
          "Layer": {
            "Digest": "sha256:57d9117a2ee2cc3760c837b08d0986fd23fc86d03fd59866ceaebe1740b1d700",
            "DiffID": "sha256:100a6dd7343738d0eeaff66ba5b15d27abcfba4321ef19c9e2ec5aa0e8749543"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-44797",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "btcd mishandles witness size checking",
          "Description": "btcd before 0.23.2, as used in Lightning Labs lnd before 0.15.2-beta and other Bitcoin-related products, mishandles witness size checking.",
          "Severity": "CRITICAL",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-2chg-86hq-7w38",
            "https://github.com/btcsuite/btcd/pull/1896",
            "https://github.com/btcsuite/btcd/pull/1896/commits/f523d4ccaa5f34a2f761f16a05f5d6e6665b1168",
            "https://github.com/btcsuite/btcd/releases/tag/v0.23.2",
            "https://github.com/lightningnetwork/lnd/issues/7002",
            "https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-44797",
            "https://pkg.go.dev/vuln/GO-2022-1098"
          ],
          "PublishedDate": "2022-11-07T04:15:00Z",
          "LastModifiedDate": "2022-11-14T18:25:00Z"
        },
        {
          "VulnerabilityID": "GHSA-qfc5-6r3j-jj22",
          "PkgName": "github.com/cosmos/cosmos-sdk",
          "InstalledVersion": "v0.46.13",
          "Layer": {
            "Digest": "sha256:57d9117a2ee2cc3760c837b08d0986fd23fc86d03fd59866ceaebe1740b1d700",
            "DiffID": "sha256:100a6dd7343738d0eeaff66ba5b15d27abcfba4321ef19c9e2ec5aa0e8749543"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-qfc5-6r3j-jj22",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "Go package github.com/cosmos/cosmos-sdk module x/crisis does NOT cause chain halt",
          "Description": "# x/crisis does NOT cause chain halt\n\n### Impact\nIf an invariant check fails on a Cosmos SDK network and a transaction is sent to the `x/crisis` module to halt the chain, the chain does not halt. All versions of the `x/crisis` module is affected on all versions of the Cosmos SDK.\n\n### Details\nThe `x/crisis` module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a `MsgVerifyInvariant` with the name of the invariant. Processing this message is supposed to cause the nodes to panic. However, because the panic is within a transaction, it is caught by the SDK’s built-in panic-recovery machinery and just treated as a normal “invalid” transaction (ie. it returns a non-zero abci Code). Thus the `x/crisis` transactions don’t actually cause chains to halt. If there is an invariant violation, it can be confirmed with an `x/crisis` transaction, but it won’t cause any nodes to halt, they will just continue processing blocks.\n\nThat said, any node running with `start --inv-check-period X` will actually panic when it runs the periodic check (though it will still not panic just by processing an `x/crisis` transaction). Since this panic is located in EndBlock, it is not caught by the panic-recovery machinery and does actually crash the node. Presumably few if any nodes actually run with this in production because of how long the invariant checks take, and this runs all of them every `X` blocks.\n\n### Patches\nNo patches will be released.\n\nThe `x/crisis` module was originally intended to allow chains to halt rather than continue with some unknown behaviour in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential [cost of halting increases](https://github.com/osmosis-labs/osmosis/issues/570), chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks, but may not be worth halting for.\n\nIn some cases, chains have already broken the invariant calculations but have dealt with the consequences off-chain or during development. Halting these chains would be counter-productive.\n\nThe SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.\n\nHence, the decision was made that the `x/crisis` module will not be patched for chain halts. The module will be deprecated when new modules take over its responsibilities.\n\n### Workarounds\nIn case of a valid invariant check failure that requires a chain halt, the network validators are encouraged to coordinate off-chain for network halts. This has been an already established process for security patches.\n\n### References\nSDK developer epic about invariant checking: https://github.com/cosmos/cosmos-sdk/issues/15706\nPublic report: https://github.com/cosmos/cosmos-sdk/issues/15325",
          "Severity": "LOW",
          "References": [
            "https://github.com/advisories/GHSA-qfc5-6r3j-jj22",
            "https://github.com/cosmos/cosmos-sdk/issues/15325",
            "https://github.com/cosmos/cosmos-sdk/issues/15706",
            "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-qfc5-6r3j-jj22"
          ]
        },
        {
          "VulnerabilityID": "CVE-2023-0475",
          "PkgName": "github.com/hashicorp/go-getter",
          "InstalledVersion": "v1.6.1",
          "FixedVersion": "1.7.0",
          "Layer": {
            "Digest": "sha256:57d9117a2ee2cc3760c837b08d0986fd23fc86d03fd59866ceaebe1740b1d700",
            "DiffID": "sha256:100a6dd7343738d0eeaff66ba5b15d27abcfba4321ef19c9e2ec5aa0e8749543"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0475",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "go-getter vulnerable to denial of service via malicious compressed archive",
          "Description": "HashiCorp go-getter up to 1.6.2 and 2.1.1 is vulnerable to decompression bombs. Fixed in 1.7.0 and 2.2.0.",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:N/I:N/A:H",
              "V3Score": 4.2
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
              "V3Score": 6.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:N/I:N/A:H",
              "V3Score": 4.2
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2023-0475",
            "https://discuss.hashicorp.com/t/hcsec-2023-4-go-getter-vulnerable-to-denial-of-service-via-malicious-compressed-archive/50125",
            "https://github.com/advisories/GHSA-jpxj-2jvg-6jv9",
            "https://github.com/hashicorp/go-getter/commit/0edab85348271c843782993345b07b1ac98912e6",
            "https://github.com/hashicorp/go-getter/commit/78e6721a2a76266718dc92c3c03c1571dffdefdc",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0475",
            "https://www.cve.org/CVERecord?id=CVE-2023-0475"
          ],
          "PublishedDate": "2023-02-16T19:15:00Z",
          "LastModifiedDate": "2023-02-27T18:33:00Z"
        }
      ]
    }
  ]
}
